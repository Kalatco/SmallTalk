version: '3.7'

services: 

  nginx:
    build: ./nginx
    volumes: 
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on: 
      - web
      - asgi_web

  redis:
    image: redis
    command: redis-server

  web:
    build: .
    command: gunicorn smallTalk.wsgi:application --bind 0.0.0.0:8000
    volumes: 
      - static_volume:/app/static
      - media_volume:/app/media
    env_file: 
      - ./.env
    depends_on: 
      - db

  asgi_web:
    build: .
    command: gunicorn smallTalk.asgi:application -w 3 -k uvicorn.workers.UvicornWorker -b :9001
    volumes: 
      - static_volume:/app/static
      - media_volume:/app/media
    env_file: 
      - ./.env
    depends_on: 
      - redis
      - db

  db:
    image: postgres:13.0-alpine
    volumes: 
      - postgres_data:/var/lib/postgresql/data/
    environment: 
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Administrator
      - POSTGRES_DB=smallTalk_deploy
    command: -p 5433

  prometheus:
    image: prom/prometheus:v2.33.4
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    # updates the file in real time, not suitable for production
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:8.2.6
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      #- ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      #- ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/django_dashboard.json"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  prometheus-data:
  grafana-data:
